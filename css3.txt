CSS:
---

## **1. Introduction to CSS**
CSS (Cascading Style Sheets) is used to style the HTML content on a web page by defining its layout, color, font, etc.

### **Need for CSS**  
CSS allows for:  
- Separation of content (HTML) and style.  
- Consistent styling across pages.  
- Flexibility to adapt web pages for different screen sizes.

---

### **CSS Syntax**  
selector {
    property: value;
}
Example:

h1 {
    color: blue;
    font-size: 24px;
}

---

## **2. Types of CSS**
1. **Inline CSS**: Styles directly in HTML elements using the `style` attribute.  

<p style="color: red;">This is inline CSS</p>

2. **Internal CSS**: Styles defined within a `<style>` tag in the HTML `<head>`.  

<style>
  p {
    color: green;
  }
</style>

3. **External CSS**: Styles in an external file linked using `<link>` in HTML.  

<link rel="stylesheet" href="styles.css">

---

### **Inspect Element in CSS**

---

### **Comments in CSS**

/* This is a comment */

---

## **3. CSS Selectors**
Selectors define how CSS targets specific elements.

### **Common Selectors**
1. **Tag Selector**  

h1 {
    color: red;
}

2. **ID Selector**  

#main-heading {
    color: blue;
}

3. **Class Selector**  
.text-bold {
    font-weight: bold;
}

4. **Group Selector**  

h1, h2, p {
    color: green;
}

5. **Child Selector**  

div > p {
    color: orange;
}

6. **Adjacent Selector**  

h1 + p {
    color: purple;
}

7. **Sibling Selector**  

h1 ~ p {
    color: pink;
}

8. **Pseudo Selectors**  
```css
a:hover {
    color: red;
}
```

9. **nth-child Selector**  
```css
li:nth-child(2) {
    color: blue;
}
```

10. **Attribute Selector**  
```css
input[type="text"] {
    border: 1px solid black;
}
```

11. **Universal Selector**  
* {
    margin: 0;
    padding: 0;
}

---

## **4. CSS Properties**
CSS allows the styling of text, boxes, and other HTML elements.

### **Text Properties**
h1 {
    color: #333;
    font-family: Arial, sans-serif;
    text-align: center;
}

### **Custom Font Family**

@font-face {
    font-family: "CustomFont";
    src: url("custom-font.ttf");
}

### **CSS Unit Types (Color and Size)**
p {
    color: rgb(255, 0, 0);
    font-size: 16px; /* px, em, rem, %, vw, vh */
}

### **Box Properties**

div {
    width: 200px;
    height: 100px;
    border: 2px solid black;
    margin: 10px;
    padding: 20px;
}

### **Shadow Properties**

box-shadow: 10px 10px 5px grey;
text-shadow: 2px 2px 4px #000;

### **Background Properties**

div {
    background-color: lightblue;
    background-image: url('bg.jpg');
    background-repeat: no-repeat;
}

### **Float and Clear**

div {
    float: left;
}
.clearfix {
    clear: both;
}

### **Position Properties**
div {
    position: absolute;
    top: 50px;
    left: 100px;
}

### **Display Properties**
div {
    display: flex;
}

---

## **5. CSS3 Properties**
CSS3 introduces advanced features for modern web design.

### **Background Gradient**

div {
    background: linear-gradient(to right, red, yellow);
}

### **Transform Properties**
div {
    transform: rotate(45deg);
}

### **Transition Properties**
div {
    transition: all 0.3s ease;
}

### **Keyframe Animation**

@keyframes slide {
    from {
        left: 0;
    }
    to {
        left: 100px;
    }
}

div {
    position: absolute;
    animation: slide 2s infinite;
}

---

## **6. Responsive Utilities**
### **Fixed vs Fluid vs Responsive Layout**
- **Fixed Layout**: Fixed width.
- **Fluid Layout**: Uses percentage widths.
- **Responsive Layout**: Adapts to screen size with media queries.

### **Meta Viewport**

<meta name="viewport" content="width=device-width, initial-scale=1.0">

### **Media Queries**

@media (max-width: 600px) {
    body {
        background-color: lightblue;
    }
}

### **Responsive Image**
img {
    max-width: 100%;
    height: auto;
}

---

## **7. Bootstrap Introduction**
Bootstrap is a CSS framework for creating responsive designs quickly.

### **Layout and Content**
Uses a 12-column grid system.  
<div class="row">
    <div class="col-md-6">Column 1</div>
    <div class="col-md-6">Column 2</div>
</div>

### **Bootstrap Components**
1. **Button**  

<button class="btn btn-primary">Click Me</button>

2. **Navbar**  

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">Navbar</a>
</nav>

### **Bootstrap Utilities**
<p class="text-center text-danger">Centered Text</p>

### **Bootstrap Icons**
Include icons from Bootstrap's library.  

<i class="bi bi-alarm"></i>

--- 

### **Complete Example**

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
    <style>
        h1 {
            color: #333;
            font-family: Arial, sans-serif;
            text-align: center;
        }
        .box {
            width: 200px;
            height: 100px;
            background: linear-gradient(to right, red, yellow);
            position: relative;
            animation: move 2s infinite;
        }
        @keyframes move {
            0% { left: 0; }
            100% { left: 100px; }
        }
    </style>
</head>
<body>
    <h1>Welcome to CSS World</h1>
    <div class="box"></div>
    <button class="btn btn-primary mt-3">Bootstrap Button</button>
</body>
</html>
